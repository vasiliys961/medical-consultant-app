import streamlit as st
import requests

# üîê API-KEY –∏–∑ secrets (OpenRouter)
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]
API_URL = "https://openrouter.ai/api/v1/chat/completions"
MODEL = "openai/gpt-4o"

# üßê –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è (–º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω–∞—è –ª–æ–≥–∏–∫–∞)
system_instruction = """–û–±—â–∞—è –ö–æ–Ω—Ü–µ–ø—Ü–∏—è: –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç

–í—ã ‚Äî AI-—Å–∏—Å—Ç–µ–º–∞, –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –Ø–¥—Ä–æ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äì –í–µ–¥—É—â–∏–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç (–í–ú–ö). –í–ú–ö –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö AI-–∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ–¥–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –í—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ö–æ—Ä–æ—à–µ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

–†–æ–ª—å: –í–µ–¥—É—â–∏–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç (–í–ú–ö)
1. –í–≤–µ–¥–µ–Ω–∏–µ: –í—ã ‚Äì –æ–ø—ã—Ç–Ω—ã–π –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—ã (20+ –ª–µ—Ç, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –º–µ–¥–∏—Ü–∏–Ω–∞). –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç–µ AI-–∞–≥–µ–Ω—Ç–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—É, —ç—Ç–∏–∫—É, –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ.
2. –ö–ª—é—á–µ–≤—ã–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏:
- –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤
- –ó–∞–ø—Ä–æ—Å –∫–ª–∏–Ω. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
- –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á –∞–≥–µ–Ω—Ç–∞–º
- –°–∏–Ω—Ç–µ–∑ –¥–∞–Ω–Ω—ã—Ö
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –∏—Å—Ç–æ—á–Ω–∏–∫–∏, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, —ç—Ç–∏–∫–∞
3. –ö–æ–º–∞–Ω–¥–∞ AI-–ê–≥–µ–Ω—Ç–æ–≤:
- –ê–≥–µ–Ω—Ç –ê–Ω–∞–ª–∏–∑–∞ –î–∞–Ω–Ω—ã—Ö
- –ê–≥–µ–Ω—Ç –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
- –ê–≥–µ–Ω—Ç –§–∞—Ä–º–∞–∫–æ—Ç–µ—Ä–∞–ø–∏–∏
- –ê–≥–µ–Ω—Ç –ù–∞—É—á–Ω—ã—Ö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤
- –ê–≥–µ–Ω—Ç –≠—Ç–∏–∫–∏ –∏ –ö–∞—á–µ—Å—Ç–≤–∞
4. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:
- –ü–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
- –î–∏–∞–≥–Ω–æ–∑—ã –∏ –∞–Ω–∞–ª–∏–∑
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
- –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ —Ä–∏—Å–∫–∏
- –≠—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è

–í—ã –≤—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ—Ç–µ –Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —è—Å–Ω–æ, —ç–º–ø–∞—Ç–∏—á–Ω–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–æ.
"""

# üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
st.set_page_config(page_title="üß† –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", page_icon="üß†")
st.title("üß† –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç")
st.markdown("AI —á–µ—Ä–µ–∑ OpenRouter GPT-4o. –í–µ–¥—É—â–∏–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç.")

# üí¨ –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "system", "content": system_instruction}
    ]

# üîÑ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥"):
    st.session_state.messages = [
        {"role": "system", "content": system_instruction}
    ]
    st.rerun()

# üî¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
for msg in st.session_state.messages[1:]:
    role = "üë§ –í—Ä–∞—á" if msg["role"] == "user" else "üß† –í–ú–ö"
    st.markdown(f"**{role}:** {msg['content']}")

# üñäÔ∏è –í–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–∞
question = st.text_area("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞:")

# üì® –û—Ç–ø—Ä–∞–≤–∫–∞
if st.button("üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å") and question:
    st.session_state.messages.append({"role": "user", "content": question})
    with st.spinner("üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."):
        try:
            response = requests.post(
                API_URL,
                headers={
                    "Authorization": f"Bearer {OPENAI_API_KEY}",
                    "Content-Type": "application/json",
                    "Referer": "https://medical-consultant-app.streamlit.app",
                    "X-Title": "medical-consultant-app"
                },
                json={
                    "model": MODEL,
                    "messages": st.session_state.messages,
                    "temperature": 0.3
                }
            )

            if response.status_code == 200:
                result = response.json()
                reply = result["choices"][0]["message"]["content"]
                st.session_state.messages.append({"role": "assistant", "content": reply})
                st.rerun()
            else:
                st.error(f"OpenRouter –æ—à–∏–±–∫–∞: {response.status_code}")
                st.json(response.json())
        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
