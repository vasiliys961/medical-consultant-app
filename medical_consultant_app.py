import streamlit as st
import requests

# üîê –ö–ª—é—á –∏–∑ Streamlit secrets
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]
API_URL = "https://openrouter.ai/api/v1/chat/completions"
MODEL = "openai/gpt-4o"

# üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
if not OPENAI_API_KEY:
    st.error("‚ùå –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!")
else:
    st.success("‚úÖ –ö–ª—é—á –ø–æ–ª—É—á–µ–Ω!")

st.set_page_config(page_title="üß† –¢–µ—Å—Ç OpenRouter", page_icon="üß†")
st.title("üß† –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç")
st.markdown("GPT-4o —á–µ—Ä–µ–∑ OpenRouter API")

question = st.text_input("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ–π –≤–æ–ø—Ä–æ—Å:")

if st.button("üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å") and question:
    with st.spinner("üí¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
        try:
            response = requests.post(
                API_URL,
                headers={
                    "Authorization": f"Bearer {OPENAI_API_KEY}",
                    "Content-Type": "application/json"
                },
                json={
                    "model": MODEL,
                    "messages": [
                        {"role": "system", "content": "–¢—ã –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫, –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ —Å—É—â–µ—Å—Ç–≤—É."},
                        {"role": "user", "content": question}
                    ],
                    "temperature": 0.3
                }
            )

            if response.status_code == 200:
                data = response.json()
                answer = data["choices"][0]["message"]["content"]
                st.markdown(f"**ü§ñ –û—Ç–≤–µ—Ç:** {answer}")
            else:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
                st.json(response.json())

        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
