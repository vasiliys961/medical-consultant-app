import os
import requests
import streamlit as st

# üîê –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á –∏–∑ Streamlit secrets
OPENAI_API_KEY = st.secrets["OPENAI_API_KEY"]
MODEL = "openai/gpt-4o"
API_URL = "https://openrouter.ai/api/v1/chat/completions"

# üìò –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
system_instruction = """–û–±—â–∞—è –ö–æ–Ω—Ü–µ–ø—Ü–∏—è: –ú—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç

–í—ã ‚Äî AI-—Å–∏—Å—Ç–µ–º–∞, –º—É–ª—å—Ç–∏–∞–≥–µ–Ω—Ç–Ω—ã–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –Ø–¥—Ä–æ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ‚Äì –í–µ–¥—É—â–∏–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç (–í–ú–ö). –í–ú–ö –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö AI-–∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –º–µ–¥–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π. –í—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —Ö–æ—Ä–æ—à–µ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.

–†–æ–ª—å: –í–µ–¥—É—â–∏–π –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç (–í–ú–ö)
1.1. –í–≤–µ–¥–µ–Ω–∏–µ: –í—ã ‚Äì –æ–ø—ã—Ç–Ω—ã–π –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä –º–µ–¥–∏—Ü–∏–Ω—ã (20+ –ª–µ—Ç, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏, –∫–ª–∏–Ω–∏–∫–∞). –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç–µ AI-–∞–≥–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–º–æ—â–∏ –º–µ–¥—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ, –ª–µ—á–µ–Ω–∏–∏. –°–∏–Ω—Ç–µ–∑–∏—Ä—É–µ—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç–µ –æ—Ç–≤–µ—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º, —ç—Ç–∏–∫—É. –ú–µ–Ω—Ç–æ—Ä, –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
1.2. –ö–ª—é—á–µ–≤—ã–µ –û–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –í–ú–ö: –ê–Ω–∞–ª–∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤, –∑–∞–ø—Ä–æ—Å –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á AI-–∞–≥–µ–Ω—Ç–∞–º, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ –æ—Ü–µ–Ω–∫–∞ –¥–∞–Ω–Ω—ã—Ö, —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π, –∫–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤, –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ, —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.
1.3. –ó–∞–ø—Ä–æ—Å –ö–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: –°–∏–º–ø—Ç–æ–º—ã, –∞–Ω–∞–º–Ω–µ–∑, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—è, –ª–µ—á–µ–Ω–∏–µ, –∫–æ–º–æ—Ä–±–∏–¥–Ω–æ—Å—Ç–∏, —Ä–µ—Å—É—Ä—Å—ã, —Ä–∏—Å–∫–∏.
1.4. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –û—Ç–≤–µ—Ç–∞: –ü–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ü–µ–Ω–∫–∞, –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —Ä–µ—Å—É—Ä—Å—ã, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ.
1.5‚Äì2.5. AI-–ê–≥–µ–Ω—Ç—ã: –∞–Ω–∞–ª–∏–∑ –∫–ª–∏–Ω. –¥–∞–Ω–Ω—ã—Ö, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, —Ñ–∞—Ä–º–∞–∫–æ—Ç–µ—Ä–∞–ø–∏—è, –º–µ–¥–∏—Ü–∏–Ω–∞, —ç—Ç–∏–∫–∞.

–í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ö–æ—Ä–æ—à–µ–º —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –°—Ç–∏–ª—å ‚Äî —è—Å–Ω—ã–π, —ç–º–ø–∞—Ç–∏—á–Ω—ã–π, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–π. –ü–æ–æ—â—Ä—è–π –¥–∏–∞–ª–æ–≥, —É–≤–∞–∂–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, —Å–æ–±–ª—é–¥–∞–π —ç—Ç–∏–∫—É –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã."""

# üß† –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.set_page_config(page_title="üß† –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç", page_icon="üß†")
st.title("üß† –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç")
st.markdown("AI-—Å–∏—Å—Ç–µ–º–∞ –Ω–∞ –±–∞–∑–µ OpenRouter GPT-4o")

# üí¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "system", "content": system_instruction}]

# üìú –í—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏
for msg in st.session_state.messages[1:]:
    role = "üë§ –í—Ä–∞—á" if msg["role"] == "user" else "ü§ñ –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç"
    st.markdown(f"**{role}:** {msg['content']}")

# üßπ –û—á–∏—Å—Ç–∫–∞ –¥–∏–∞–ª–æ–≥–∞
if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥"):
    st.session_state.messages = [{"role": "system", "content": system_instruction}]
    st.rerun()

# üìù –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞
question = st.text_area("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞:")

# üì® –û—Ç–ø—Ä–∞–≤–∫–∞
if st.button("üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å") and question:
    st.session_state.messages.append({"role": "user", "content": question})
    with st.spinner("üí¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞..."):
        try:
            response = requests.post(
                API_URL,
                headers={
                    "Authorization": f"Bearer {OPENAI_API_KEY}",
                    "Content-Type": "application/json",
                    "HTTP-Referer": "https://share.streamlit.io/",
                    "X-Title": "Medical Consultant App"
                },
                json={
                    "model": MODEL,
                    "messages": st.session_state.messages,
                    "temperature": 0.3
                }
            )

            if response.status_code == 200:
                result = response.json()
                if "choices" in result:
                    reply = result["choices"][0]["message"]["content"]
                    st.session_state.messages.append({"role": "assistant", "content": reply})
                    st.rerun()
                else:
                    st.error("‚ùå –û—Ç–≤–µ—Ç –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç 'choices'")
                    st.json(result)
            else:
                st.error(f"‚ùå OpenRouter –æ—à–∏–±–∫–∞: {response.status_code}")
                st.json(response.json())

        except Exception as e:
            st.error(f"‚ùå –°–∏—Å—Ç–µ–º–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
